# https://github.com/imbatony/electorn-chinese-chess

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:

name: 发布 Release

jobs:
  build:
    name: Build Release & Upload Assets
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: true

      - name: Use tag
        run: echo ${{ steps.tag.outputs.tag }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3.0.0

      - name: Build project Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Windows SetUp Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/index.html
          asset_name: index-${{ steps.tag.outputs.tag }}.html
          asset_content_type: application/octet-stream
